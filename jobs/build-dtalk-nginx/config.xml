<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>2</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>repo</name>
          <description></description>
          <defaultValue>341025277667.dkr.ecr.eu-central-1.amazonaws.com</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.0.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://ec2-50-19-97-148.compute-1.amazonaws.com/symphony/product/web-portal.git</url>
        <credentialsId>af3778d0-f05c-4608-878e-c085228d6b05</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/dtalk-develop</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>app</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <com.etas.jenkins.plugins.CreateTextFile.CreateFileBuilder plugin="text-file-operations@1.3.2">
      <textFilePath>nginx.conf</textFilePath>
      <textFileContent>user nginx;
worker_processes 4;
pid /run/nginx.pid;


events {
	worker_connections 768;
}

http {
	sendfile on;
	access_log /var/log/nginx/app.log;
	error_log /var/log/nginx/appe.log;
	include /etc/nginx/mime.types;

	

upstream phpfcgi {
     	server dtalk-php-svc:9000;

     }


  server {

        listen       80;
        server_name  admin.genie.lk;
		root /app/public/;
		error_log    /var/log/nginx/GenieAdminAppSvr1.error.log;
    	access_log   /var/log/nginx/GenieAdminAppSvr1.access.log;
        index index.php index.html index.htm; 
 
	location / {
        	try_files $uri $uri/ /index.php?$query_string;
                include       /etc/nginx/mime.types;
    	}

	location ~ \.php$ {
        	try_files $uri /index.php =404;
        	fastcgi_split_path_info ^(.+\.php)(/.+)$;
        	fastcgi_pass phpfcgi;
        	fastcgi_index index.php;
        	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        	include fastcgi_params;
                include       /etc/nginx/mime.types;
    	}

       location ~ \.css {
    add_header  Content-Type    text/css;
}
location ~ \.js {
    add_header  Content-Type    application/x-javascript;
}

 	
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


    }

	
	
}</textFileContent>
      <fileOption>overWrite</fileOption>
      <useWorkspace>true</useWorkspace>
    </com.etas.jenkins.plugins.CreateTextFile.CreateFileBuilder>
    <com.etas.jenkins.plugins.CreateTextFile.CreateFileBuilder plugin="text-file-operations@1.3.2">
      <textFilePath>Dockerfile</textFilePath>
      <textFileContent>FROM centos:7

RUN echo $&apos;[nginx] \n\
name=nginx repo \n\
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/ \n\
gpgcheck=0 \n\
enabled=1&apos; &gt;&gt; /etc/yum.repos.d/nginx.repo  \
	&amp;&amp; yum update -y \
	&amp;&amp; yum install -y nginx
	
ADD nginx.conf /etc/nginx/nginx.conf
#ADD sites-enabled/ /etc/nginx/sites-enabled
	

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
	&amp;&amp; ln -sf /dev/stderr /var/log/nginx/error.log

ADD app/ /app

EXPOSE 80 443

CMD [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]</textFileContent>
      <fileOption>overWrite</fileOption>
      <useWorkspace>true</useWorkspace>
    </com.etas.jenkins.plugins.CreateTextFile.CreateFileBuilder>
    <hudson.tasks.Shell>
      <command>sudo docker build -t dtnginx .
sudo docker tag dtnginx:latest $repo/dtnginx:latest
OUTPUT=&quot;$(aws ecr get-login --region us-east-1)&quot;
sudo ${OUTPUT} 
sudo docker push $repo/dtnginx:latest</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>